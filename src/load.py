import sqlite3
import pandas as pd
from sqlalchemy import create_engine, text
from pathlib import Path

def load_to_database(input_file='data_processed.parquet', table_name='bazhanov'):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if not Path(input_file).exists():
            print(f"‚ùå Processed file {input_file} not found!")
            return False
            
        # –ß—Ç–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        print("üîë Reading database credentials...")
        conn = sqlite3.connect("creds.db")
        cur = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        cur.execute('SELECT url, port, user, pass FROM access LIMIT 1;')
        row = cur.fetchone()
        conn.close()

        if not row:
            print("‚ùå No credentials found in creds.db")
            return False
            
        url, port, user, password = row
        dbname = 'homeworks' 

        print('‚úÖ Credentials loaded successfully:')
        print(f'   URL: {url}:{port}')
        print(f'   Database: {dbname}')
        print(f'   User: {user}')

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
        print('\nüîó Connecting to PostgreSQL...')
        conn_str = f'postgresql+psycopg2://{user}:{password}@{url}:{port}/{dbname}'
        engine = create_engine(conn_str)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        with engine.connect() as test_conn:
            test_conn.execute(text("SELECT 1"))
        print('‚úÖ PostgreSQL connection established')

        # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞
        print(f'\nüìÇ Loading dataset from {input_file}')
        if input_file.endswith('.parquet'):
            df = pd.read_parquet(input_file)
        else:
            df = pd.read_csv(input_file)
            
        print(f'‚úÖ Dataset loaded. Rows: {len(df)}, Columns: {len(df.columns)}')

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        df_load = df.head(100)
        print(f'üìä Prepared {len(df_load)} rows for database insertion')

        # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
        print(f'\nüíæ Writing data to table "{table_name}"')
        df_load.to_sql(table_name, engine, schema="public", if_exists="replace", index=False)
        print(f'‚úÖ Table "{table_name}" successfully created ({len(df_load)} rows)')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–∏—Å–∏
        print('\nüîç Verifying data in database...')
        with engine.connect() as conn:
            result = conn.execute(text(f'SELECT COUNT(*) FROM {table_name};'))
            count = result.scalar()
            print(f'‚úÖ Table contains {count} rows')
            
            result = conn.execute(text(f'SELECT * FROM {table_name} LIMIT 3;'))
            rows = result.fetchall()

        if rows:
            print(f'üìã Sample data from "{table_name}":')
            for r in rows:
                print(r)
        
        print('‚úÖ Data loading completed successfully!')
        return True
        
    except Exception as e:
        print(f'‚ùå Database loading error: {e}')
        return False

if __name__ == "__main__":
    load_to_database()